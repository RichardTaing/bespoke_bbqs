{"ast":null,"code":"import { base_url } from \"../../constants\";\nexport const AUTHENTICATE_USER = \"AUTHENTICATE_USER\";\nexport const LOGOUT_USER = \"LOGOUT_USER\";\nexport const signup = user => {\n  return async dispatch => {\n    try {\n      const response = await fetch(\"\".concat(base_url, \"/user/signup\"), {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accepts: \"application/json\"\n        },\n        method: \"POST\",\n        body: JSON.stringify({\n          firstName: user.firstName,\n          lastName: user.lastName,\n          email: user.email,\n          password: user.password\n        })\n      });\n      const jsonResponse = await response.json();\n      return jsonResponse;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const authenticate = (email, password) => {\n  return async dispatch => {\n    const response = await fetch(\"\".concat(base_url, \"/user/login\"), {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accepts: \"application/json\"\n      },\n      method: \"POST\",\n      body: JSON.stringify({\n        email: email,\n        password: password\n      })\n    });\n    const jsonResponse = await response.json();\n\n    if (response.status === 200) {\n      window.localStorage.setItem(\"auth\", JSON.stringify(response.message));\n      dispatch({\n        type: AUTHENTICATE_USER,\n        auth: jsonResponse.message\n      });\n    }\n\n    return jsonResponse.message;\n  };\n};\nexport const logout = () => {\n  return dispatch => {\n    const authData = window.localStorage.getItem(\"auth\");\n\n    if (authData) {\n      window.localStorage.clear();\n      dispatch({\n        type: LOGOUT_USER,\n        payload: \"\"\n      });\n      return Promise.resolve(true);\n    }\n\n    return Promise.resolve(false);\n  };\n};\nexport const getToken = () => {\n  return dispatch => {\n    const authData = window.localStorage.getItem(\"auth\");\n\n    if (authData) {\n      const auth = JSON.parse(authData);\n\n      if (auth.hasOwnProperty(\"token\") && auth.token !== \"\") {\n        dispatch({\n          type: AUTHENTICATE_USER,\n          auth: auth\n        });\n        return Promise.resolve(true);\n      }\n    }\n\n    return Promise.resolve(false);\n  };\n};","map":{"version":3,"sources":["/Users/rst_979/MonashBootCamp/bespoke_bbqs/src/store/actions/authActions.js"],"names":["base_url","AUTHENTICATE_USER","LOGOUT_USER","signup","user","dispatch","response","fetch","headers","Accepts","method","body","JSON","stringify","firstName","lastName","email","password","jsonResponse","json","error","console","log","authenticate","status","window","localStorage","setItem","message","type","auth","logout","authData","getItem","clear","payload","Promise","resolve","getToken","parse","hasOwnProperty","token"],"mappings":"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","sourcesContent":["import { base_url } from \"../../constants\";\n\nexport const AUTHENTICATE_USER = \"AUTHENTICATE_USER\";\nexport const LOGOUT_USER = \"LOGOUT_USER\";\n\nexport const signup = user => {\n  return async dispatch => {\n    try {\n      const response = await fetch(`${base_url}/user/signup`, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accepts: \"application/json\"\n        },\n        method: \"POST\",\n        body: JSON.stringify({\n          firstName: user.firstName,\n          lastName: user.lastName,\n          email: user.email,\n          password: user.password\n        })\n      });\n      const jsonResponse = await response.json();\n      return jsonResponse;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const authenticate = (email, password) => {\n  return async dispatch => {\n    const response = await fetch(`${base_url}/user/login`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accepts: \"application/json\"\n      },\n      method: \"POST\",\n      body: JSON.stringify({\n        email: email,\n        password: password\n      })\n    });\n\n    const jsonResponse = await response.json();\n    if (response.status === 200) {\n      window.localStorage.setItem(\"auth\", JSON.stringify(response.message));\n\n      dispatch({\n        type: AUTHENTICATE_USER,\n        auth: jsonResponse.message\n      });\n    }\n\n    return jsonResponse.message;\n  };\n};\n\nexport const logout = () => {\n  return dispatch => {\n    const authData = window.localStorage.getItem(\"auth\");\n    if (authData) {\n      window.localStorage.clear();\n      dispatch({\n        type: LOGOUT_USER,\n        payload: \"\"\n      });\n      return Promise.resolve(true);\n    }\n    return Promise.resolve(false);\n  };\n};\n\nexport const getToken = () => {\n  return dispatch => {\n    const authData = window.localStorage.getItem(\"auth\");\n\n    if (authData) {\n      const auth = JSON.parse(authData);\n      if (auth.hasOwnProperty(\"token\") && auth.token !== \"\") {\n        dispatch({\n          type: AUTHENTICATE_USER,\n          auth: auth\n        });\n\n        return Promise.resolve(true);\n      }\n    }\n\n    return Promise.resolve(false);\n  };\n};\n"]},"metadata":{},"sourceType":"module"}