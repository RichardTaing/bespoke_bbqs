{"ast":null,"code":"import _defineProperty from \"/Users/rst_979/MonashBootCamp/bespoke_bbqs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ADD_TO_CART, GET_CART_DETAILS, UPDATE_CART, CLEAR_CART } from \"../actions/cartActions\";\nconst initState = {\n  cartItem: [],\n  totalAmount: 0,\n  cartCount: 0\n};\n\nconst cartReducers = (state = initState, actions) => {\n  switch (actions.type) {\n    case ADD_TO_CART:\n      const cartItem = state.cartItem;\n      let updatedCartItem = [];\n      let totalAmount;\n      const itemCount = state.cartItem.filter(item => item.product === actions.cartItem.product);\n\n      if (itemCount.length === 0) {\n        updatedCartItem = [...cartItem, {\n          product: actions.cartItem.product,\n          name: actions.cartItem.name,\n          image: actions.cartItem.image,\n          price: actions.cartItem.price,\n          quantity: actions.cartItem.quantity,\n          total: actions.cartItem.quantity * actions.cartItem.price\n        }];\n      } else {\n        updatedCartItem = cartItem.map(item => item.product === actions.cartItem.product ? _objectSpread({}, item, {\n          quantity: item.quantity + actions.cartItem.quantity,\n          total: item.total + actions.cartItem.price\n        }) : item);\n      }\n\n      totalAmount = state.totalAmount + actions.cartItem.price;\n      state = {\n        cartItem: updatedCartItem,\n        totalAmount: totalAmount,\n        cartCount: state.cartCount + 1\n      };\n      break;\n\n    case GET_CART_DETAILS:\n      const cItem = actions.cartItems.cart;\n      let totalAmt = 0;\n      let quantityCount = 0;\n      const updateCartItem = cItem.map(item => {\n        totalAmt += item.total;\n        quantityCount += item.quantity;\n        return {\n          product: item.product._id,\n          name: item.product.name,\n          image: item.product.productPic[0].img,\n          price: item.price,\n          quantity: item.quantity,\n          total: item.total\n        };\n      });\n      state = {\n        cartItem: updateCartItem,\n        totalAmount: totalAmt,\n        cartCount: quantityCount\n      };\n      break;\n\n    case UPDATE_CART:\n      const updateItem = actions.item;\n      const cartItems = state.cartItem.map(item => {\n        return item.product === updateItem.productId ? _objectSpread({}, item, {\n          quantity: updateItem.quantity,\n          total: updateItem.total\n        }) : item;\n      });\n      state = {\n        cartItem: cartItems,\n        totalAmount: parseFloat(state.totalAmount) + parseFloat(updateItem.price * updateItem.newQuantity),\n        cartCount: parseInt(state.cartCount) + parseInt(updateItem.newQuantity)\n      };\n      break;\n\n    case CLEAR_CART:\n      state = {\n        cartItem: [],\n        totalAmount: 0,\n        cartCount: 0\n      };\n\n    default:\n      break;\n  }\n\n  return state;\n};\n\nexport default cartReducers;","map":{"version":3,"sources":["/Users/rst_979/MonashBootCamp/bespoke_bbqs/src/store/reducers/cartReducers.js"],"names":["ADD_TO_CART","GET_CART_DETAILS","UPDATE_CART","CLEAR_CART","initState","cartItem","totalAmount","cartCount","cartReducers","state","actions","type","updatedCartItem","itemCount","filter","item","product","length","name","image","price","quantity","total","map","cItem","cartItems","cart","totalAmt","quantityCount","updateCartItem","_id","productPic","img","updateItem","productId","parseFloat","newQuantity","parseInt"],"mappings":"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","sourcesContent":["import {\n  ADD_TO_CART,\n  GET_CART_DETAILS,\n  UPDATE_CART,\n  CLEAR_CART\n} from \"../actions/cartActions\";\n\nconst initState = {\n  cartItem: [],\n  totalAmount: 0,\n  cartCount: 0\n};\n\nconst cartReducers = (state = initState, actions) => {\n  switch (actions.type) {\n    case ADD_TO_CART:\n      const cartItem = state.cartItem;\n      let updatedCartItem = [];\n      let totalAmount;\n\n      const itemCount = state.cartItem.filter(\n        item => item.product === actions.cartItem.product\n      );\n\n      if (itemCount.length === 0) {\n        updatedCartItem = [\n          ...cartItem,\n          {\n            product: actions.cartItem.product,\n            name: actions.cartItem.name,\n            image: actions.cartItem.image,\n            price: actions.cartItem.price,\n            quantity: actions.cartItem.quantity,\n            total: actions.cartItem.quantity * actions.cartItem.price\n          }\n        ];\n      } else {\n        updatedCartItem = cartItem.map(item =>\n          item.product === actions.cartItem.product\n            ? {\n                ...item,\n                quantity: item.quantity + actions.cartItem.quantity,\n                total: item.total + actions.cartItem.price\n              }\n            : item\n        );\n      }\n      totalAmount = state.totalAmount + actions.cartItem.price;\n      state = {\n        cartItem: updatedCartItem,\n        totalAmount: totalAmount,\n        cartCount: state.cartCount + 1\n      };\n      break;\n    case GET_CART_DETAILS:\n      const cItem = actions.cartItems.cart;\n      let totalAmt = 0;\n      let quantityCount = 0;\n      const updateCartItem = cItem.map(item => {\n        totalAmt += item.total;\n        quantityCount += item.quantity;\n        return {\n          product: item.product._id,\n          name: item.product.name,\n          image: item.product.productPic[0].img,\n          price: item.price,\n          quantity: item.quantity,\n          total: item.total\n        };\n      });\n      state = {\n        cartItem: updateCartItem,\n        totalAmount: totalAmt,\n        cartCount: quantityCount\n      };\n      break;\n    case UPDATE_CART:\n      const updateItem = actions.item;\n      const cartItems = state.cartItem.map(item => {\n        return item.product === updateItem.productId\n          ? {\n              ...item,\n              quantity: updateItem.quantity,\n              total: updateItem.total\n            }\n          : item;\n      });\n      state = {\n        cartItem: cartItems,\n        totalAmount:\n          parseFloat(state.totalAmount) +\n          parseFloat(updateItem.price * updateItem.newQuantity),\n        cartCount: parseInt(state.cartCount) + parseInt(updateItem.newQuantity)\n      };\n      break;\n    case CLEAR_CART:\n      state = {\n        cartItem: [],\n        totalAmount: 0,\n        cartCount: 0\n      };\n    default:\n      break;\n  }\n\n  return state;\n};\n\nexport default cartReducers;\n"]},"metadata":{},"sourceType":"module"}