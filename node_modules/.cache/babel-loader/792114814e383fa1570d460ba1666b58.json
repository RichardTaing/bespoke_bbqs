{"ast":null,"code":"var _jsxFileName = \"/Users/rst_979/MonashBootCamp/bespoke_bbqs/src/components/Header/Header.js\";\nimport React, { Component } from \"react\";\nimport \"./style.css\";\nimport TopHeader from \"./TopHeader/TopHeader\";\nimport MainHeader from \"./MainHeader/MainHeader\";\nimport BottomHeader from \"./BottomHeader/BottomHeader\";\nimport * as authActions from \"../../store/actions/authActions\";\nimport * as cartActions from \"../../store/actions/cartActions\";\nimport { connect } from \"react-redux\";\n\nclass Header extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.logout = () => {\n      this.props.logout();\n    };\n  }\n\n  componentDidMount() {\n    if (!this.props.auth.isAuthenticated) {\n      this.props.getToken().then(result => {\n        if (result) {\n          this.props.getCartItems(this.props.auth.token, this.props.auth.user.userId);\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }\n\n  render() {\n    const isAuthenticated = this.props.auth.isAuthenticated;\n    const cart = this.props.cart;\n    const cartCount = isAuthenticated ? cart.cartCount : \"\";\n    return React.createElement(\"header\", {\n      className: \"Header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(TopHeader, {\n      logout: this.logout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(MainHeader, {\n      cartCount: cartCount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(BottomHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth,\n    cart: state.cart\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getToken: () => dispatch(authActions.getToken()),\n    getCartItems: (token, userId) => dispatch(cartActions.getCartItems(token, userId)),\n    logout: () => dispatch(authActions.logout())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","map":{"version":3,"sources":["/Users/rst_979/MonashBootCamp/bespoke_bbqs/src/components/Header/Header.js"],"names":["React","Component","TopHeader","MainHeader","BottomHeader","authActions","cartActions","connect","Header","logout","props","componentDidMount","auth","isAuthenticated","getToken","then","result","getCartItems","token","user","userId","catch","error","console","log","render","cart","cartCount","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,aAAP;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAO,KAAKC,WAAZ,MAA6B,iCAA7B;AACA,OAAO,KAAKC,WAAZ,MAA6B,iCAA7B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,MAAN,SAAqBP,SAArB,CAA+B;AAAA;AAAA;;AAAA,SAmB7BQ,MAnB6B,GAmBpB,MAAM;AACb,WAAKC,KAAL,CAAWD,MAAX;AACD,KArB4B;AAAA;;AAC7BE,EAAAA,iBAAiB,GAAG;AAClB,QAAI,CAAC,KAAKD,KAAL,CAAWE,IAAX,CAAgBC,eAArB,EAAsC;AACpC,WAAKH,KAAL,CACGI,QADH,GAEGC,IAFH,CAEQC,MAAM,IAAI;AACd,YAAIA,MAAJ,EAAY;AACV,eAAKN,KAAL,CAAWO,YAAX,CACE,KAAKP,KAAL,CAAWE,IAAX,CAAgBM,KADlB,EAEE,KAAKR,KAAL,CAAWE,IAAX,CAAgBO,IAAhB,CAAqBC,MAFvB;AAID;AACF,OATH,EAUGC,KAVH,CAUSC,KAAK,IAAI;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,OAZH;AAaD;AACF;;AAMDG,EAAAA,MAAM,GAAG;AAAA,UACCZ,eADD,GACqB,KAAKH,KAAL,CAAWE,IADhC,CACCC,eADD;AAAA,UAECa,IAFD,GAEU,KAAKhB,KAFf,CAECgB,IAFD;AAGP,UAAMC,SAAS,GAAGd,eAAe,GAAGa,IAAI,CAACC,SAAR,GAAoB,EAArD;AAEA,WACE;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,MAAM,EAAE,KAAKlB,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAEkB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAOD;;AAnC4B;;AAsC/B,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLjB,IAAAA,IAAI,EAAEiB,KAAK,CAACjB,IADP;AAELc,IAAAA,IAAI,EAAEG,KAAK,CAACH;AAFP,GAAP;AAID,CALD;;AAOA,MAAMI,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLjB,IAAAA,QAAQ,EAAE,MAAMiB,QAAQ,CAAC1B,WAAW,CAACS,QAAZ,EAAD,CADnB;AAELG,IAAAA,YAAY,EAAE,CAACC,KAAD,EAAQE,MAAR,KACZW,QAAQ,CAACzB,WAAW,CAACW,YAAZ,CAAyBC,KAAzB,EAAgCE,MAAhC,CAAD,CAHL;AAILX,IAAAA,MAAM,EAAE,MAAMsB,QAAQ,CAAC1B,WAAW,CAACI,MAAZ,EAAD;AAJjB,GAAP;AAMD,CAPD;;AASA,eAAeF,OAAO,CAACqB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CtB,MAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./style.css\";\nimport TopHeader from \"./TopHeader/TopHeader\";\nimport MainHeader from \"./MainHeader/MainHeader\";\nimport BottomHeader from \"./BottomHeader/BottomHeader\";\nimport * as authActions from \"../../store/actions/authActions\";\nimport * as cartActions from \"../../store/actions/cartActions\";\nimport { connect } from \"react-redux\";\n\nclass Header extends Component {\n  componentDidMount() {\n    if (!this.props.auth.isAuthenticated) {\n      this.props\n        .getToken()\n        .then(result => {\n          if (result) {\n            this.props.getCartItems(\n              this.props.auth.token,\n              this.props.auth.user.userId\n            );\n          }\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    }\n  }\n\n  logout = () => {\n    this.props.logout();\n  };\n\n  render() {\n    const { isAuthenticated } = this.props.auth;\n    const { cart } = this.props;\n    const cartCount = isAuthenticated ? cart.cartCount : \"\";\n\n    return (\n      <header className=\"Header\">\n        <TopHeader logout={this.logout} />\n        <MainHeader cartCount={cartCount} />\n        <BottomHeader />\n      </header>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth,\n    cart: state.cart\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getToken: () => dispatch(authActions.getToken()),\n    getCartItems: (token, userId) =>\n      dispatch(cartActions.getCartItems(token, userId)),\n    logout: () => dispatch(authActions.logout())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n"]},"metadata":{},"sourceType":"module"}