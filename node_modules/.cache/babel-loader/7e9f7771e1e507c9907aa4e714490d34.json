{"ast":null,"code":"var _jsxFileName = \"/Users/rst_979/MonashBootCamp/bespoke_bbqs/src/containers/Login/index.js\";\nimport React, { Component } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport \"./style.css\";\nimport Logo from \"../../components/Logo\";\nimport MobileTypeInput from \"../../components/UI/MobileTypeInput\";\nimport SubmitGradientButton from \"../../components/UI/SubmitGradientButton\";\nimport * as authActions from \"../../store/actions/authActions\";\nimport { connect } from \"react-redux\";\nimport Error from \"../../components/Error\";\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      redirectToReferrer: false,\n      email: \"\",\n      password: \"\",\n      isError: false,\n      errorMessage: \"\"\n    };\n\n    this.textHandler = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.setError = (error, message) => {\n      this.setState({\n        error: error,\n        errorMessage: message\n      });\n    };\n\n    this.loginHandler = e => {\n      e.preventDefault();\n\n      if (this.state.email === \"\") {\n        this.setError(true, \"Enter Email\");\n        return;\n      }\n\n      const emailPattern = new RegExp(/[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/);\n\n      if (!emailPattern.test(this.state.email)) {\n        this.setError(true, \"Invalid Email Address\");\n        return;\n      }\n\n      if (this.state.password === \"\") {\n        this.setError(true, \"Enter Password\");\n        return;\n      }\n\n      this.props.authenticate(this.state.email, this.state.password).then(response => {\n        console.log(response);\n\n        if (response.hasOwnProperty(\"token\")) {\n          window.localStorage.setItem(\"auth\", JSON.stringify(response));\n          this.setState({\n            redirectToReferrer: true\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n  }\n\n  componentDidMount() {\n    if (!this.props.auth.isAuthenticated) {\n      this.props.getToken().then(result => {\n        // result will be either true or false\n        if (result) {\n          this.setState({\n            redirectToReferrer: true\n          });\n        }\n      }).catch(er => {\n        console.log(er);\n      });\n    }\n  }\n\n  render() {\n    if (this.state.redirectToReferrer) {\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"LoginContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"WelcomeText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Login\")), React.createElement(Logo, {\n      style: {\n        margin: \"0 auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"LoginWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      onSubmit: this.loginHandler,\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(MobileTypeInput, {\n      type: \"text\",\n      placeholder: \"Email\",\n      value: this.state.email,\n      textHandler: this.textHandler,\n      name: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(MobileTypeInput, {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: this.state.password,\n      textHandler: this.textHandler,\n      name: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(Error, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, this.state.errorMessage), React.createElement(SubmitGradientButton, {\n      label: \"Login\",\n      style: {\n        marginTop: \"30px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/signup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Create a new account\"), React.createElement(Link, {\n      to: \"/forget-password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Forgot Password ?\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    authenticate: (email, password) => dispatch(authActions.authenticate(email, password)),\n    getToken: () => dispatch(authActions.getToken())\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/Users/rst_979/MonashBootCamp/bespoke_bbqs/src/containers/Login/index.js"],"names":["React","Component","Link","Redirect","Logo","MobileTypeInput","SubmitGradientButton","authActions","connect","Error","Login","state","redirectToReferrer","email","password","isError","errorMessage","textHandler","e","setState","target","name","value","setError","error","message","loginHandler","preventDefault","emailPattern","RegExp","test","props","authenticate","then","response","console","log","hasOwnProperty","window","localStorage","setItem","JSON","stringify","catch","componentDidMount","auth","isAuthenticated","getToken","result","er","render","margin","marginTop","display","justifyContent","mapDispatchToProps","dispatch","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport \"./style.css\";\nimport Logo from \"../../components/Logo\";\n\nimport MobileTypeInput from \"../../components/UI/MobileTypeInput\";\nimport SubmitGradientButton from \"../../components/UI/SubmitGradientButton\";\n\nimport * as authActions from \"../../store/actions/authActions\";\nimport { connect } from \"react-redux\";\nimport Error from \"../../components/Error\";\n\nclass Login extends Component {\n  state = {\n    redirectToReferrer: false,\n    email: \"\",\n    password: \"\",\n    isError: false,\n    errorMessage: \"\"\n  };\n\n  textHandler = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  setError = (error, message) => {\n    this.setState({\n      error: error,\n      errorMessage: message\n    });\n  };\n\n  loginHandler = e => {\n    e.preventDefault();\n\n    if (this.state.email === \"\") {\n      this.setError(true, \"Enter Email\");\n      return;\n    }\n\n    const emailPattern = new RegExp(\n      /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/\n    );\n    if (!emailPattern.test(this.state.email)) {\n      this.setError(true, \"Invalid Email Address\");\n      return;\n    }\n\n    if (this.state.password === \"\") {\n      this.setError(true, \"Enter Password\");\n      return;\n    }\n\n    this.props\n      .authenticate(this.state.email, this.state.password)\n      .then(response => {\n        console.log(response);\n        if (response.hasOwnProperty(\"token\")) {\n          window.localStorage.setItem(\"auth\", JSON.stringify(response));\n          this.setState({\n            redirectToReferrer: true\n          });\n        }\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n  componentDidMount() {\n    if (!this.props.auth.isAuthenticated) {\n      this.props\n        .getToken()\n        .then(result => {\n          // result will be either true or false\n          if (result) {\n            this.setState({\n              redirectToReferrer: true\n            });\n          }\n        })\n        .catch(er => {\n          console.log(er);\n        });\n    }\n  }\n\n  render() {\n    if (this.state.redirectToReferrer) {\n      return <Redirect to=\"/\" />;\n    }\n\n    return (\n      <div className=\"LoginContainer\">\n        <div className=\"WelcomeText\">\n          <h3>Login</h3>\n        </div>\n        <Logo style={{ margin: \"0 auto\" }} />\n        <div className=\"LoginWrapper\">\n          <p></p>\n          <form onSubmit={this.loginHandler} autoComplete=\"off\">\n            <MobileTypeInput\n              type=\"text\"\n              placeholder=\"Email\"\n              value={this.state.email}\n              textHandler={this.textHandler}\n              name=\"email\"\n            />\n            <MobileTypeInput\n              type=\"password\"\n              placeholder=\"Password\"\n              value={this.state.password}\n              textHandler={this.textHandler}\n              name=\"password\"\n            />\n\n            <Error>{this.state.errorMessage}</Error>\n\n            <SubmitGradientButton label=\"Login\" style={{ marginTop: \"30px\" }} />\n          </form>\n        </div>\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n          <Link to=\"/signup\">Create a new account</Link>\n          <Link to=\"/forget-password\">Forgot Password ?</Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    authenticate: (email, password) =>\n      dispatch(authActions.authenticate(email, password)),\n    getToken: () => dispatch(authActions.getToken())\n  };\n};\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}