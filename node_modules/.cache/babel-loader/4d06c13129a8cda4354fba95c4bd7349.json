{"ast":null,"code":"import _defineProperty from \"/Users/rst_979/MonashBootCamp/bespoke_bbqs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/rst_979/MonashBootCamp/bespoke_bbqs/src/containers/Cart/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport Header from \"../../components/Header/Header\";\nimport \"./style.css\";\nimport CartItem from \"./CartItem\";\nimport * as cartActions from \"../../store/actions/cartActions\";\nimport * as authActions from \"../../store/actions/authActions\";\nimport { connect } from \"react-redux\";\nimport CartPrice from \"../../components/CartPrice\";\n\nclass Cart extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cartItems: []\n    };\n\n    this.decreaseQuantity = (e, productId) => {\n      this.updateCart(productId, -1);\n    };\n\n    this.increaseQuantity = (e, productId) => {\n      this.updateCart(productId, 1);\n    };\n\n    this.updateCart = async (productId, quantity) => {\n      try {\n        const auth = this.props.auth;\n        let product = this.state.cartItems.find(item => item.product === productId);\n        product = {\n          productId: product.product,\n          quantity: parseInt(product.quantity) + parseInt(quantity),\n          newQuantity: quantity,\n          price: product.price,\n          total: parseFloat(product.total) + parseFloat(product.price * quantity)\n        };\n\n        if (product.quantity <= 0) {\n          return;\n        }\n\n        const response = await this.props.updateCart(auth.token, auth.user.userId, product);\n\n        if (response.ok == 1) {\n          const cartItems = this.state.cartItems;\n          this.setState({\n            cartItems: cartItems.map(item => item.product === productId ? _objectSpread({}, item, {\n              quantity: item.quantity + quantity,\n              total: item.total + item.price * quantity\n            }) : item)\n          });\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.changeQuantity = (e, productId) => {// console.log(e.target.value);\n      // if(isNaN(e.target.value)){\n      //     return;\n      // }\n      // const firstDigit = parseInt(e.target.value.split(\"\")[0]);\n      // if(firstDigit === 0){\n      //     return;\n      // }\n      // //alert(e.target.value);\n      // this.updateCart(productId, parseInt(e.target.value));\n    };\n  }\n\n  componentDidMount() {\n    if (!this.props.auth.isAuthenticated) {\n      this.props.getToken().then(result => {\n        if (result) {\n          const cartItems = this.props.getCartItems(this.props.auth.token, this.props.auth.user.userId);\n          return cartItems;\n        }\n\n        return [];\n      }).then(cartItems => {\n        if (cartItems.cart.length > 0) {\n          console.log(this.props.cart);\n          this.setState({\n            cartItems: this.props.cart.cartItem\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    } else {\n      this.setState({\n        cartItems: this.props.cart.cartItem\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"Content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"CartWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"CartDetails\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"CardTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"My Cart\")), React.createElement(\"div\", {\n      className: \"CardBody\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, this.state.cartItems.map(product => React.createElement(CartItem, {\n      key: product.product,\n      productId: product.product,\n      name: product.name,\n      image: product.image,\n      price: product.price,\n      quantity: product.quantity,\n      total: product.total //name=\"quantity\"\n      ,\n      changeQuantity: this.changeQuantity,\n      increaseQuantity: this.increaseQuantity,\n      decreaseQuantity: this.decreaseQuantity,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"PlaceOrder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"PlaceOrderButton\",\n      onClick: () => this.props.history.push(\"/place-order\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Place Order\")))), React.createElement(CartPrice, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth,\n    cart: state.cart\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getCartItems: (token, userId) => dispatch(cartActions.getCartItems(token, userId)),\n    updateCart: (token, userId, product) => dispatch(cartActions.updateCart(token, userId, product)),\n    getToken: () => dispatch(authActions.getToken())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);","map":{"version":3,"sources":["/Users/rst_979/MonashBootCamp/bespoke_bbqs/src/containers/Cart/index.js"],"names":["React","Component","Header","CartItem","cartActions","authActions","connect","CartPrice","Cart","state","cartItems","decreaseQuantity","e","productId","updateCart","increaseQuantity","quantity","auth","props","product","find","item","parseInt","newQuantity","price","total","parseFloat","response","token","user","userId","ok","setState","map","error","console","log","changeQuantity","componentDidMount","isAuthenticated","getToken","then","result","getCartItems","cart","length","cartItem","catch","render","name","image","history","push","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Header from \"../../components/Header/Header\";\nimport \"./style.css\";\nimport CartItem from \"./CartItem\";\nimport * as cartActions from \"../../store/actions/cartActions\";\nimport * as authActions from \"../../store/actions/authActions\";\nimport { connect } from \"react-redux\";\nimport CartPrice from \"../../components/CartPrice\";\n\nclass Cart extends Component {\n  state = {\n    cartItems: []\n  };\n\n  decreaseQuantity = (e, productId) => {\n    this.updateCart(productId, -1);\n  };\n\n  increaseQuantity = (e, productId) => {\n    this.updateCart(productId, 1);\n  };\n\n  updateCart = async (productId, quantity) => {\n    try {\n      const auth = this.props.auth;\n      let product = this.state.cartItems.find(\n        item => item.product === productId\n      );\n      product = {\n        productId: product.product,\n        quantity: parseInt(product.quantity) + parseInt(quantity),\n        newQuantity: quantity,\n        price: product.price,\n        total: parseFloat(product.total) + parseFloat(product.price * quantity)\n      };\n      if (product.quantity <= 0) {\n        return;\n      }\n      const response = await this.props.updateCart(\n        auth.token,\n        auth.user.userId,\n        product\n      );\n      if (response.ok == 1) {\n        const { cartItems } = this.state;\n        this.setState({\n          cartItems: cartItems.map(item =>\n            item.product === productId\n              ? {\n                  ...item,\n                  quantity: item.quantity + quantity,\n                  total: item.total + item.price * quantity\n                }\n              : item\n          )\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  changeQuantity = (e, productId) => {\n    // console.log(e.target.value);\n    // if(isNaN(e.target.value)){\n    //     return;\n    // }\n    // const firstDigit = parseInt(e.target.value.split(\"\")[0]);\n    // if(firstDigit === 0){\n    //     return;\n    // }\n    // //alert(e.target.value);\n    // this.updateCart(productId, parseInt(e.target.value));\n  };\n\n  componentDidMount() {\n    if (!this.props.auth.isAuthenticated) {\n      this.props\n        .getToken()\n        .then(result => {\n          if (result) {\n            const cartItems = this.props.getCartItems(\n              this.props.auth.token,\n              this.props.auth.user.userId\n            );\n            return cartItems;\n          }\n          return [];\n        })\n        .then(cartItems => {\n          if (cartItems.cart.length > 0) {\n            console.log(this.props.cart);\n\n            this.setState({\n              cartItems: this.props.cart.cartItem\n            });\n          }\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    } else {\n      this.setState({\n        cartItems: this.props.cart.cartItem\n      });\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Header />\n        <div className=\"Content\">\n          <div className=\"CartWrapper\">\n            <div className=\"CartDetails\">\n              {/* List cart items */}\n              <div className=\"CardTitle\">\n                <h3>My Cart</h3>\n              </div>\n              <div className=\"CardBody\">\n                {this.state.cartItems.map(product => (\n                  <CartItem\n                    key={product.product}\n                    productId={product.product}\n                    name={product.name}\n                    image={product.image}\n                    price={product.price}\n                    quantity={product.quantity}\n                    total={product.total}\n                    //name=\"quantity\"\n                    changeQuantity={this.changeQuantity}\n                    increaseQuantity={this.increaseQuantity}\n                    decreaseQuantity={this.decreaseQuantity}\n                  />\n                ))}\n\n                <div className=\"PlaceOrder\">\n                  <button\n                    className=\"PlaceOrderButton\"\n                    onClick={() => this.props.history.push(\"/place-order\")}\n                  >\n                    Place Order\n                  </button>\n                </div>\n              </div>\n            </div>\n\n            <CartPrice />\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth,\n    cart: state.cart\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getCartItems: (token, userId) =>\n      dispatch(cartActions.getCartItems(token, userId)),\n    updateCart: (token, userId, product) =>\n      dispatch(cartActions.updateCart(token, userId, product)),\n    getToken: () => dispatch(authActions.getToken())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\n"]},"metadata":{},"sourceType":"module"}